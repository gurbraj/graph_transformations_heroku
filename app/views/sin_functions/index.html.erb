
<h1>Training mode</h1>
<p>parameters
</p>
<div>
  <form action="" method="">
    <div>
      <label>a</label>
      <input id="a" type="float" placeholder="">
    </div>
    <div>
      <label>b</label>
      <input id="b" type="float">
    </div>
    <div>
      <label>h</label>
      <input id="h" type="float">
    </div>
    <div>
      <label>k</label>
      <input id="k" type="float">
    </div>
<div>





<canvas id="myChart" width="800" height="400"></canvas>

<h1 id="natural_language">Natural language</h1>
<ul id="a_natural" ></ul>
<ul id="b_natural" ></ul>
<ul id="h_natural"></ul>
<ul id="k_natural"></ul>

<script>

var canvas = document.getElementsByTagName('canvas')[0];
canvas.width  = 1200;
canvas.height = 400;

var updated_label=function(a,b,h,k){
return a + " * " + "sin ("+  b   +  " (" +      "x-" + h+ ") )"   + " + "+  k
}

var ctx = document.getElementById("myChart");

var dataset = {
    labels: <%= @func.x_vals %>,
    datasets: [
        {


            label: "function",
            fill: false,
            lineTension: 0.1,
            backgroundColor: "rgba(75,192,192,0.4)",
            borderColor: "rgba(75,192,192,1)",
            borderCapStyle: 'butt',
            borderDash: [],
            borderDashOffset: 0.0,
            borderJoinStyle: 'miter',
            pointBorderColor: "rgba(75,192,192,1)",
            pointBackgroundColor: "#fff",
            pointBorderWidth: 1,
            pointHoverRadius: 5,
            pointHoverBackgroundColor: "rgba(75,192,192,1)",
            pointHoverBorderColor: "rgba(220,220,220,1)",
            pointHoverBorderWidth: 2,
            pointRadius: 1,
            pointHitRadius: 10,



            data: <%= @func.y_vals %>,
        }
    ]
};

var myChart = new Chart(ctx, {
    type: 'line',
    data: dataset,

    options:{
      showLines: true,
      responsive: false,
      scales: {
            yAxes: [{
                ticks: {
                    max: 3,
                    min: -3,
                    stepSize: 1
                }
            }]
        }


    }

});




$(document).ready(function(){

  console.log(a);
  console.log(b);
  console.log(h);
  console.log(k);


  $("#a").on("keyup", function(){
    var a=$("#a").val();
    var b=$("#b").val();
    var h=$("#h").val();
    var k=$("#k").val();

    $.ajax({method: "GET",
    url: "http://localhost:3000/sin_functions.json",
    data : {"a": a, "b": b, "h": h, "k": k },
    success: function(data){
      var x_vals=data[0];
      var y_vals=data[1];
      myChart.config.data.datasets[0].data=y_vals;
      //myChart.config.options.scales.yAxes[0].ticks.beginAtZero=true
      //myChart.config.options.scales.yAxes[0].ticks.max=10

      myChart.config.options.animation.duration=4000;
      myChart.config.data.datasets[0].label= updated_label(a,b,h,k)

      if (a >= 1)  {
      $("#a_natural").html("sin(x) have been amplified by "+ a +" units")
      }
      if ( 0<a<1 ) {
        $("#a_natural").html("sin(x) have been compressed by "+ a+ " units")

      }


      myChart.update()
    }
  })

  })

  $("#b").on("keyup", function(){
    var a=$("#a").val();
    var b=$("#b").val();
    var h=$("#h").val();
    var k=$("#k").val();


    $.ajax({method: "GET",
    url: "http://localhost:3000/sin_functions.json",
    data : {"a": a, "b": b, "h": h, "k": k },
    success: function(data){
      var x_vals=data[0];
      var y_vals=data[1];
      myChart.config.data.datasets[0].data=y_vals
      myChart.config.options.animation.duration=4000;
      myChart.config.data.datasets[0].label= updated_label(a,b,h,k)
      myChart.update()
    }
  })


  })

  $("#h").on("keyup", function(){
    var a=$("#a").val();
    var b=$("#b").val();
    var h=$("#h").val();
    var k=$("#k").val();


    $.ajax({method: "GET",
    url: "http://localhost:3000/sin_functions.json",
    data : {"a": a, "b": b, "h": h, "k": k },
    success: function(data){
      var x_vals=data[0];
      var y_vals=data[1];
      myChart.config.data.datasets[0].data=y_vals
      myChart.config.options.animation.duration=4000;
      myChart.config.data.datasets[0].label=updated_label(a,b,h,k)
      myChart.update()
    }
  })
  })

  $("#k").on("keyup", function(){
    var a=$("#a").val();
    var b=$("#b").val();
    var h=$("#h").val();
    var k=$("#k").val();


    $.ajax({method: "GET",
    url: "http://localhost:3000/sin_functions.json",
    data : {"a": a, "b": b, "h": h, "k": k },
    success: function(data){
      var x_vals=data[0];
      var y_vals=data[1];
      myChart.config.data.datasets[0].data=y_vals
      myChart.config.options.animation.duration=4000;
      myChart.config.data.datasets[0].label= updated_label(a,b,h,k)
      myChart.update()
    }
  })
  })



})



</script>
